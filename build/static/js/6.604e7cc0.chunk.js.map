{"version":3,"sources":["utilities/stringToArrayBuffer.js","utilities/encrypt.js","containers/Auth/Auth.module.css","containers/Auth/Left/Left.module.css","containers/Auth/Right/Right.module.css","containers/Auth/Right/SignIn/SignIn.module.css","containers/Auth/Right/SignUp/SignUp.module.css","containers/Auth/Left/Left.js","containers/Auth/Right/SignIn/SignIn.js","containers/Auth/Right/SignUp/SignUp.js","containers/Auth/Right/Right.js","containers/Auth/Auth.js"],"names":["str2ab","str","Uint8Array","from","atob","c","charCodeAt","encryptWithServerPublicKey","data","key","a","window","crypto","subtle","importKey","strtoab","name","modulusLength","publicExponent","hash","cryptoKey","enc","TextEncoder","encrypt","encode","JSON","stringify","encrypted","ab2str","module","exports","Left","props","className","classes","style","fontSize","margin","SignIn","state","username","password","loading","error","change","event","setState","target","value","submit","preventDefault","server_public_key","then","encryptedData","location","pathname","req","axios","post","obj","public_key","clientPublicKey","catch","err","console","log","res","sessionStorage","setItem","accessToken","user","mobileNumber","setAuthTrue","setAesKey","encrypted_aes_key","history","push","this","src","loader","alt","display","Form","color","Group","controlId","Label","Control","type","required","placeholder","Input","autoFocus","onChange","minLength","sitekey","onChangeCaptcha","size","P","onClick","changeAuthMethod","Button","Component","connect","dispatch","withRouter","SignUp","div","cPassword","contact","account","IFSCCode","usernameLenErr","passwordLenErr","cPasswordErr","firstReqErr","contactErr","nameErr","accountErr","IFSCCodeErr","secondReqErr","accountExistErr","usernameExistErr","captchaToken","checkVal","inputName","length","reg","match","next","get","params","token","captchaRes","success","accountNumber","accountExists","ifscCode","P2","Error","Right","prevState","Auth","useHistory","auth","useSelector","Parent"],"mappings":"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","file":"static/js/6.604e7cc0.chunk.js","sourcesContent":["const str2ab = (str) => {\n  return Uint8Array.from(atob(str), c => c.charCodeAt(0))\n};\n\nexport default str2ab;\n","import strtoab from \"./stringToArrayBuffer\";\nimport ab2str from \"./arrayBufferToString\";\nconst encryptWithServerPublicKey = async (data, key) => {\n  const cryptoKey = await window.crypto.subtle.importKey(\n    \"spki\",\n    strtoab(key),\n    {\n      name: \"RSA-OAEP\",\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: \"SHA-256\",\n    },\n    true,\n    [\"encrypt\"]\n  );\n  const enc = new TextEncoder();\n  const encrypted = await window.crypto.subtle.encrypt(\n    { name: \"RSA-OAEP\" },\n    cryptoKey,\n    enc.encode(JSON.stringify(data))\n  );\n  return ab2str(encrypted);\n};\n\nexport default encryptWithServerPublicKey;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Parent\":\"Auth_Parent__1zouR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Left\":\"Left_Left__q5zL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Right\":\"Right_Right__uwx5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignIn\":\"SignIn_SignIn__3rPp4\",\"Input\":\"SignIn_Input__11VzC\",\"Button\":\"SignIn_Button__1rOvb\",\"P\":\"SignIn_P__3ixKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignIn\":\"SignUp_SignIn__cuKDJ\",\"Input\":\"SignUp_Input__2pbYV\",\"Button\":\"SignUp_Button__141mt\",\"P\":\"SignUp_P__2QGT5\",\"P2\":\"SignUp_P2__1KGHC\",\"Error\":\"SignUp_Error__2rAZG\"};","import React from \"react\";\nimport classes from \"./Left.module.css\";\n\nconst Left = (props) => {\n  return (\n    <div className={classes.Left}>\n      <i style={{fontSize: \"4vw\", margin: \"1vh auto\"}} className=\"fab fa-atlassian\"></i>\n      <p>Deposit Cheques with a single click!</p>\n    </div>\n  );\n};\n\nexport default Left;\n","import React, { Component } from \"react\";\nimport encryptWithServerPublicKey from \"../../../../utilities/encrypt\";\nimport classes from \"./SignIn.module.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../../chequeAxios\";\nimport Form from \"react-bootstrap/Form\";\n// import decrypt from \"../../../../utilities/decrypt\";\nimport { withRouter } from \"react-router\";\nimport loader from \"../../../../assets/loader.svg\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nclass SignIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    loading: false,\n    error: false,\n  };\n  change = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  submit = (event) => {\n    this.setState({ loading: true });\n    if (this.state.username !== \"\" && this.state.password !== \"\") {\n      event.preventDefault();\n      const data = {\n        username: this.state.username,\n        password: this.state.password,\n      };\n      encryptWithServerPublicKey(data, this.props.server_public_key).then(\n        (encryptedData) => {\n          if (this.props.location.pathname === \"/auth\") {\n            const req = async () => {\n              const res = await axios\n                .post(\"/api/login\", {\n                  obj: encryptedData,\n                  public_key: this.props.clientPublicKey,\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n              if (res && res.data) {\n                // decrypt(res.data.encrypted_aes_key).then((decryptedData) => {\n                //   console.log(JSON.parse(decryptedData));\n                // });\n                console.log(res.data);\n                sessionStorage.setItem(\n                  \"token\",\n                  JSON.stringify(res.data.accessToken)\n                );\n                const user = {\n                  mobileNumber: res.data.user.mobileNumber,\n                  name: res.data.user.name,\n                  username: res.data.user.username,\n                };\n                this.setState({ loading: false });\n                this.props.setAuthTrue(user);\n                this.props.setAesKey(res.data.user.encrypted_aes_key);\n                this.props.history.push(\"/\");\n              } else {\n                this.setState({ error: true, loading: false });\n              }\n            };\n            req();\n          } else {\n            const req = async () => {\n              const res = await axios\n                .post(\"/api/adminLogin\", {\n                  obj: encryptedData,\n                  public_key: this.props.clientPublicKey,\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n              if (res && res.data) {\n                // decrypt(res.data.encrypted_aes_key).then((decryptedData) => {\n                //   console.log(JSON.parse(decryptedData));\n                // });\n                sessionStorage.setItem(\n                  \"token\",\n                  JSON.stringify(res.data.accessToken)\n                );\n                console.log(res.data);\n                const user = {\n                  name: \"\",\n                  username: res.data.username,\n                };\n                this.setState({ loading: false });\n                this.props.setAuthTrue(user);\n                this.props.setAesKey(res.data.encrypted_aes_key);\n                this.props.history.push(\"/adminDashboard\");\n              } else {\n                this.setState({ error: true, loading: false });\n              }\n            };\n            req();\n          }\n        }\n      );\n    }\n  };\n  render() {\n    console.log(this.props.location.pathname);\n    return this.state.loading ? (\n      <img\n        src={loader}\n        alt=\"loader\"\n        style={{ display: \"block\", margin: \"10vh auto\" }}\n      />\n    ) : (\n      <>\n        {this.props.location.pathname === \"/auth\" ? (\n          <h1>Sign In to Apna Cheques</h1>\n        ) : null}\n        {this.props.location.pathname === \"/admin\" ? (\n          <h1>Log In as Admin</h1>\n        ) : null}\n        <Form className={classes.SignIn}>\n          {this.state.error && (\n            <p style={{ color: \"#dc3546\" }}>*Invalid credentials</p>\n          )}\n          <p style={{ color: \"#dc3546\" }}>*All fields are required</p>\n          <Form.Group className=\"mb-4\" controlId=\"username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              required\n              placeholder=\"Enter username\"\n              className={classes.Input}\n              autoFocus\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.change}\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-4\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              required\n              placeholder=\"Password\"\n              className={classes.Input}\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.change}\n              minLength=\"7\"\n            />\n          </Form.Group>\n          <ReCAPTCHA\n            sitekey=\"6Ld-tgodAAAAAIKYDYuoZHEIhpgiLJdJQToCPNw3\"\n            onChange={this.onChangeCaptcha}\n            size=\"normal\"\n          />\n          {this.props.location.pathname === \"/auth\" ? (\n            <p className={classes.P} onClick={this.props.changeAuthMethod}>\n              New User?\n            </p>\n          ) : null}\n          <button\n            className={classes.Button}\n            type=\"submit\"\n            onClick={this.submit}\n          >\n            Sign In <i className=\"fas fa-chevron-right\"></i>\n          </button>\n        </Form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    server_public_key: state.key,\n    clientPublicKey: state.clientPublicKey,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setAuthTrue: (user) => dispatch({ type: \"True_Auth\", user: user }),\n    setAesKey: (key) => dispatch({ type: \"SET_AES_KEY\", key: key }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));\n","import React, { Component } from \"react\";\nimport classes from \"./SignUp.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport encryptWithServerPublicKey from \"../../../../utilities/encrypt\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../../chequeAxios\";\nimport loader from \"../../../../assets/loader.svg\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nclass SignUp extends Component {\n  state = {\n    div: 0, // div number\n    username: \"\",\n    password: \"\",\n    cPassword: \"\",\n    name: \"\",\n    contact: \"\",\n    account: \"\",\n    IFSCCode: \"\",\n    usernameLenErr: false,\n    passwordLenErr: false,\n    cPasswordErr: false,\n    firstReqErr: true,\n    contactErr: false,\n    nameErr: false,\n    accountErr: false,\n    IFSCCodeErr: false,\n    secondReqErr: true,\n    accountExistErr: false,\n    usernameExistErr: false,\n    captchaToken: \"\",\n    loading: false,\n  };\n  checkVal = (inputName) => {\n    if (this.state.div === 0) {\n      this.setState({\n        firstReqErr:\n          this.state.username === \"\" ||\n          this.state.password === \"\" ||\n          this.state.cPassword === \"\",\n      });\n      if (inputName === \"username\") {\n        this.setState({ usernameLenErr: this.state.username.length < 4 });\n      } else if (inputName === \"password\") {\n        const reg =\n          \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\";\n        console.log(!this.state.password.match(reg));\n        this.setState({\n          passwordLenErr: !this.state.password.match(reg),\n          cPasswordErr: this.state.password !== this.state.cPassword,\n        });\n      } else if (inputName === \"cPassword\") {\n        this.setState({\n          cPasswordErr: this.state.password !== this.state.cPassword,\n        });\n      }\n    } else {\n      this.setState({\n        secondReqErr:\n          this.state.name === \"\" ||\n          this.state.contact === \"\" ||\n          this.state.account === \"\" ||\n          this.state.IFSCCode === \"\",\n      });\n      if (inputName === \"name\") {\n        const reg = /[A-Za-z]+/;\n        this.setState({ nameErr: !this.state.name.match(reg) });\n      } else if (inputName === \"contact\") {\n        const reg = /^\\d{10}$/;\n        this.setState({ contactErr: !this.state.contact.match(reg) });\n      } else if (inputName === \"account\") {\n        const reg = /^\\d{15}$/;\n        this.setState({ accountErr: !this.state.account.match(reg) });\n      } else if (inputName === \"IFSCCode\") {\n        const reg = /^[A-Z]{4}0[A-Z0-9]{6}$/;\n        this.setState({ IFSCCodeErr: !this.state.IFSCCode.match(reg) });\n      }\n    }\n  };\n  change = (event) => {\n    this.setState({ [event.target.name]: event.target.value }, () => {\n      this.checkVal(event.target.name);\n    });\n  };\n  next = async (event) => {\n    event.preventDefault();\n    if (\n      !this.state.usernameLenErr &&\n      !this.state.passwordLenErr &&\n      !this.state.cPasswordErr &&\n      !this.state.firstReqErr\n    ) {\n      this.setState({ loading: true });\n      const usernameDoesNotExists = await axios.get(\n        \"/api/checkUsernameExists\",\n        {\n          params: { username: this.state.username },\n        }\n      );\n      if (usernameDoesNotExists.data) {\n        this.setState({ div: 1, usernameExistErr: false });\n      } else {\n        this.setState({ usernameExistErr: true });\n      }\n      this.setState({ loading: false });\n    }\n  };\n  submit = async (event) => {\n    this.setState({ loading: true });\n    event.preventDefault();\n    const captchaRes = await axios.post(\"/api/captchaVerification\", {\n      token: this.state.captchaToken,\n    });\n    console.log(captchaRes.data);\n    if (captchaRes.data.success) {\n      if (\n        !this.state.nameErr &&\n        !this.state.accountErr &&\n        !this.state.contactErr &&\n        !this.state.IFSCCodeErr &&\n        !this.state.secondReqErr\n      ) {\n        const accountExists = await axios.get(\"/api/checkAccountNumber\", {\n          params: {\n            accountNumber: this.state.account,\n          },\n        });\n        console.log(accountExists.data);\n        if (accountExists.data) {\n          const data = {\n            username: this.state.username,\n            password: this.state.password,\n            name: this.state.name,\n            mobileNumber: this.state.contact,\n            accountNumber: this.state.account,\n            ifscCode: this.state.IFSCCode,\n          };\n          encryptWithServerPublicKey(data, this.props.server_public_key).then(\n            (encryptedData) => {\n              const req = async () => {\n                const res = await axios.post(\"/api/signUp\", {\n                  obj: encryptedData,\n                });\n                if (res.data) {\n                  this.props.changeAuthMethod();\n                }\n              };\n              req();\n            }\n          );\n        } else {\n          this.setState({ accountExistErr: true, div: 0 });\n        }\n      }\n    }\n    this.setState({ loading: false });\n  };\n  onChangeCaptcha = (value) => {\n    this.setState({ captchaToken: value });\n  };\n  render() {\n    return (\n      <>\n        <h1>Welcome to Apna Cheques!</h1>\n        {this.state.loading ? (\n          <img\n            src={loader}\n            alt=\"loader\"\n            style={{ display: \"block\", margin: \"10vh auto\" }}\n          />\n        ) : (\n          <Form className={classes.SignIn}>\n            <p className={classes.P2} onClick={this.props.changeAuthMethod}>\n              <i className=\"fas fa-chevron-left\"></i> Already a User?\n            </p>\n            {this.state.div === 0 && (\n              <div>\n                {this.state.firstReqErr && (\n                  <p className={classes.Error}>*All fields are required</p>\n                )}\n                {this.state.usernameExistErr && (\n                  <p className={classes.Error}>*Username already exists</p>\n                )}\n                {this.state.accountExistErr && (\n                  <p className={classes.Error}>*Bank Account does not exist</p>\n                )}\n                <Form.Group className=\"mb-4\" controlId=\"username\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter username\"\n                    className={classes.Input}\n                    autoFocus\n                    name=\"username\"\n                    onChange={this.change}\n                    value={this.state.username}\n                  />\n                  {this.state.usernameLenErr && (\n                    <p className={classes.Error}>\n                      *Username must be of atleast 4 characters\n                    </p>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-4\" controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classes.Input}\n                    name=\"password\"\n                    onChange={this.change}\n                    value={this.state.password}\n                  />\n                  {this.state.passwordLenErr && (\n                    <p className={classes.Error}>\n                      *Password must contain atleast 8 characters, one uppercase\n                      letter, one lowercase letter, one number and one special\n                      character.\n                    </p>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-4\" controlId=\"formBasicCPassword\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    className={classes.Input}\n                    name=\"cPassword\"\n                    onChange={this.change}\n                    value={this.state.cPassword}\n                  />\n                  {this.state.cPasswordErr && (\n                    <p className={classes.Error}>\n                      *Confirm Password must match Password\n                    </p>\n                  )}\n                </Form.Group>\n                <button className={classes.Button} onClick={this.next}>\n                  Next <i className=\"fas fa-chevron-right\"></i>\n                </button>\n              </div>\n            )}\n            {this.state.div === 1 && (\n              <div>\n                {this.state.secondReqErr && (\n                  <p className={classes.Error}>*All fields are required</p>\n                )}\n                <Form.Group className=\"mb-4\" controlId=\"name\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"What shall we call you?\"\n                    className={classes.Input}\n                    autoFocus\n                    name=\"name\"\n                    onChange={this.change}\n                    value={this.state.name}\n                  />\n                  {this.state.nameErr && (\n                    <p className={classes.Error}>*Invalid name</p>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-4\" controlId=\"number\">\n                  <Form.Label>Mobile Number</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"We need it to contact you!\"\n                    className={classes.Input}\n                    name=\"contact\"\n                    onChange={this.change}\n                    value={this.state.contact}\n                  />\n                  {this.state.contactErr && (\n                    <p className={classes.Error}>*Invalid Phone Number</p>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-4\" controlId=\"account\">\n                  <Form.Label>Account Number</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Account Number\"\n                    className={classes.Input}\n                    name=\"account\"\n                    onChange={this.change}\n                    value={this.state.account}\n                  />\n                  {this.state.accountErr && (\n                    <p className={classes.Error}>*Invalid Account Number</p>\n                  )}\n                </Form.Group>\n                <Form.Group className=\"mb-4\" controlId=\"ifsc\">\n                  <Form.Label>IFSC Code</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Okay, Last One!\"\n                    className={classes.Input}\n                    name=\"IFSCCode\"\n                    onChange={this.change}\n                    value={this.state.IFSCCode}\n                  />\n                  {this.state.IFSCCodeErr && (\n                    <p className={classes.Error}>*Invalid IFSC Code</p>\n                  )}\n                </Form.Group>\n                <ReCAPTCHA\n                  sitekey=\"6Ld-tgodAAAAAIKYDYuoZHEIhpgiLJdJQToCPNw3\"\n                  onChange={this.onChangeCaptcha}\n                  size=\"normal\"\n                />\n                <p\n                  className={classes.P2}\n                  onClick={() => this.setState({ div: 0 })}\n                >\n                  <i className=\"fas fa-chevron-left\"></i> Back\n                </p>\n\n                <button\n                  className={classes.Button}\n                  onClick={this.submit}\n                  type=\"submit\"\n                >\n                  Submit <i className=\"fas fa-chevron-right\"></i>\n                </button>\n              </div>\n            )}\n          </Form>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { server_public_key: state.key };\n};\n\nexport default connect(mapStateToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport classes from \"./Right.module.css\";\nimport SignIn from \"./SignIn/SignIn\";\nimport SignUp from \"./SignUp/SignUp\";\n\nclass Right extends Component {\n  state = {\n    div: false, // 0: SignIn, 1: SignUp\n  };\n  changeAuthMethod = () => {\n    this.setState((prevState) => {\n      return { div: !prevState.div };\n    });\n  };\n  render() {\n    return (\n      <div className={classes.Right}>\n        {this.state.div ? (\n          <SignUp changeAuthMethod={this.changeAuthMethod} />\n        ) : (\n          <SignIn changeAuthMethod={this.changeAuthMethod} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Right;\n","import React from \"react\";\nimport classes from \"./Auth.module.css\";\nimport Left from \"./Left/Left\";\nimport Right from \"./Right/Right\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nconst Auth = (props) => {\n  const history = useHistory();\n  const auth = useSelector((state) => state.auth);\n  const user = useSelector((state) => state.user);\n  if (auth) {\n    if (user.name !== null) {\n      // Customer\n      history.push(\"/\");\n    } else {\n      history.push(\"/adminDashboard\");\n    }\n  }\n  return (\n    !auth && (\n      <div className={classes.Parent}>\n        <Left />\n        <Right />\n      </div>\n    )\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}